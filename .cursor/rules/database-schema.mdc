# 데이터베이스 스키마 가이드

## 🗄️ 핵심 테이블

### issues (이슈 단위)
```sql
-- 뉴스 이슈 정보 저장 (카드 피드 핵심)
CREATE TABLE issues (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    title TEXT NOT NULL,                    -- GPT 생성 제목 (1~2문장)
    summary TEXT NOT NULL,                  -- GPT 기반 중립적 요약
    image_url TEXT,                         -- 대표 이미지
    bias_left_pct DECIMAL(5,2),            -- 좌성향 기사 비율
    bias_center_pct DECIMAL(5,2),          -- 중성향 기사 비율
    bias_right_pct DECIMAL(5,2),           -- 우성향 기사 비율
    dominant_bias TEXT,                     -- 최고 성향값
    source_count INTEGER DEFAULT 0,         -- 연결된 기사 수
    updated_at TIMESTAMP DEFAULT NOW()
);
```

### articles (개별 기사)
```sql
-- 개별 뉴스 기사 (편향 분석 기본 데이터)
CREATE TABLE articles (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    issue_id UUID REFERENCES issues(id),
    title TEXT NOT NULL,
    content TEXT NOT NULL,
    url TEXT NOT NULL,
    source TEXT NOT NULL,                   -- 언론사명
    published_at TIMESTAMP,
    author TEXT,
    image_url TEXT,
    bias_analysis TEXT                      -- 편향 분석 결과
);
```

### common_points (공통 팩트)
```sql
-- 좌우 언론 공통 팩트 (Key Facts용)
CREATE TABLE common_points (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    issue_id UUID REFERENCES issues(id),
    point TEXT NOT NULL                     -- 공통 언급 문장
);
```

### bias_summaries (성향별 요약)
```sql
-- 성향별 이슈 요약 (좌/중/우 관점)
CREATE TABLE bias_summaries (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    issue_id UUID REFERENCES issues(id),
    bias TEXT NOT NULL,                     -- 성향 (left/center/right)
    summary_list JSONB                      -- bullet 형태 요약
);
```

## 🔗 테이블 관계
```
issues (1) ←→ (N) articles
    ↓
    ├── (1:N) common_points
    ├── (1:N) bias_summaries
    ├── (1:N) reactions
    └── (1:N) bookmarks
```

## 📊 데이터 생성 프로세스

### 1. 이슈 클러스터링
- 유사한 기사들을 이슈로 그룹화
- GPT로 이슈 제목과 요약 생성
- 편향 비율 계산 (좌/중/우 기사 수 기반)

### 2. 공통점 추출
- 좌우 기사 1~2개씩 샘플링 → GPT로 공통점 추출
- `common_points` 테이블에 저장

### 3. 성향별 요약 생성
- 해당 bias 성향 기사 2~3개 샘플링
- GPT로 해당 성향 시각 요약 → bullet 형태로 저장

## 💾 데이터 저장 규칙

### 깔끔한 저장 코드
```python
# ✅ 권장
async def save_articles(articles: List[Article]):
    for article in articles:
        await db.articles.insert(article.dict())
    print(f"💾 Saved {len(articles)} articles")
```

### 불필요한 로그 제거
```python
# ❌ 피해야 할 방식
print(f"HTTP Request: POST /api/articles")
print(f"Database: Inserting article with ID {article_id}")
```

## 🔍 주요 쿼리 패턴

### 이슈별 기사 조회
```sql
SELECT a.*, i.title as issue_title 
FROM articles a 
JOIN issues i ON a.issue_id = i.id 
WHERE i.id = $1;
```

### 편향별 요약 조회
```sql
SELECT bs.* 
FROM bias_summaries bs 
WHERE bs.issue_id = $1 AND bs.bias = $2;
```
